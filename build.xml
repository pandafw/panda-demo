<?xml version="1.0" encoding="UTF-8"?>
<project name="panda-demo" default="usage" basedir=".">
	<property name="prj.repo" location="../panda-repo"/>
	<property name="app.dir" value="/var/www/apps"/>
	<property name="run.dir" value="/var/www/run"/>
	<property name="log.dir" value="/var/www/log"/>

	<!-- load properties -->
	<property file="src/main/resources/system.properties"/>

	<tstamp>
		<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
	</tstamp>

	<!-- version -->
	<import file="../panda-java/ant/panda-version.xml"/>

	<!-- dependency -->
	<path id="dep.cp">
		<pathelement path="../panda-aems/out/classes"/>
		<pathelement path="../panda-exts/out/classes"/>
		<pathelement path="../panda-java/out/classes"/>
		<path refid="lib.cp"/>
	</path>

	<!-- usage -->
	<target name="usage">
		<echo><![CDATA[
${prj.name}-${VERSION} build file
-----------------------------------

Available targets are:

build        --> Build the project (clean, cp-fonts, cp-res, javac)
clean        --> Delete everything in the output directory
cp-fonts     --> Copy fonts to the web/WEB-INF/fonts directory
cp-res       --> Copy resource files to the classes directory
dist         --> Build and distribute the project as a war file (build, war)
gen-all      --> Generate all source files (gen-clean, gen-java, gen-ftl, gen-res)"/>
gen-clean    --> Delete all generated files"/>
gen-ftl      --> Generate freemarker source files"/>
gen-java     --> Generate java source files"/>
gen-res      --> Generate resource bundle source files"/>
ivy-resolve  --> Retreive dependencies
ivy-report   --> Generates a report of dependencies
ivy-clean    --> Clean the cache
javac        --> Compile java source files
javadoc      --> Generate java documents
release      --> Release the project
test         --> Test the project (test-build, test-run, test-report)
test-build   --> Build the test suite of project (test-clean, test-rescp, test-emma, test-javac)
test-clean   --> Delete test output files in the output directory
test-emma    --> EMMA instruments main classes
test-javac   --> Compile test java source files
test-javadoc --> Generate test java documents
test-report  --> Build the test report
test-rescp   --> Copy test resource to the test classes directory
test-run     --> Run all junit test case
war          --> Distribute the project as a war file
]]>
		</echo>
	</target>

	<!-- ivy -->
	<import file="../panda-java/ant/prj-ivy.xml"/>
	
	<!-- code generate -->
	<import file="../panda-exts/ant/prj-codegen.xml"/>

	<!-- build -->
	<import file="../panda-java/ant/prj-build.xml"/>


	<target name="build" depends="clean, cp-fonts, cp-res, n2a, javac" description="Build the project"/>

	<!-- dist -->
	<target name="war" description="Distribute the project as a war file">
		<delete includeemptydirs="true">
			<fileset dir="out">
				<include name="war/**"/>
				<include name="${prj.name}-*.war"/>
			</fileset>
		</delete>

		<copy todir="out/war" preservelastmodified="true">
			<fileset dir="web">
				<include name="**/*"/>
				<exclude name="WEB-INF/_*/**"/>
			</fileset>
		</copy>
		<copy file="LICENSE" todir="out/war/META-INF" overwrite="true" force="true"/>
		<copy file="ivy.xml" todir="out/war/META-INF" overwrite="true" force="true"/>

		<manifest file="out/war/META-INF/MANIFEST.MF">
			<attribute name="Created-By" value="${prj.org}"/>
			<attribute name="Built-By" value="${prj.org}"/>
			<attribute name="Built-Date" value="${TODAY}"/>
			<attribute name="Implementation-Title" value="${prj.title}"/>
			<attribute name="Implementation-Version" value="${VERSION}"/>
			<attribute name="Implementation-Vendor" value="${prj.url}"/>
		</manifest>

		<copy todir="out/war/WEB-INF/classes" preservelastmodified="true">
			<fileset dir="out/classes">
				<include name="**/*"/>
			</fileset>
		</copy>
		<replaceregexp file="out/war/WEB-INF/classes/system.properties" 
			match="#prj.version=.*"
			replace="prj.version=${prj.version}"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/system.properties" 
			match="prj.revision=.*"
			replace="prj.revision=${REVISION}"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/system.properties" 
			match="task.port=\d*"
			replace="task.port=80"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/log4j.properties" 
			match="(debug)|(trace)"
			replace="info"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/log4j.properties" 
			match="log4j.rootLogger=warn, stdout"
			replace="log4j.rootLogger=warn, dailyfile, smtp"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/log4j.properties" 
			match="\{VERSION\}"
			replace="${VERSION}"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/log4j.properties" 
			match="pdemo.log"
			replace="${log.dir}/pdemo/pdemo.log"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/freemarker.properties" 
			match="template_update_delay=.*"
			replace="template_update_delay=60000"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/panda/demo/Application.properties" 
			match="site-cdn=.*"
			replace="site-cdn=true"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/classes/panda/demo/Application.properties" 
			match="site-debug=.*"
			replace="site-debug=false"
			byline="true"
			encoding="ISO-8859-1"/>
		<replaceregexp file="out/war/WEB-INF/web.xml" 
			match="&lt;!\-\- debug start --&gt;"
			replace="&lt;!-- debug start -"
			byline="true"/>
		<replaceregexp file="out/war/WEB-INF/web.xml" 
			match="&lt;!\-\- debug end --&gt;"
			replace="- debug end --&gt;"
			byline="true"/>
		<replaceregexp file="out/war/WEB-INF/web.xml" 
			match="&lt;!\-\- release start -"
			replace="&lt;!-- release start --&gt;"
			byline="true"/>
		<replaceregexp file="out/war/WEB-INF/web.xml" 
			match="- release end \-\-&gt;"
			replace="&lt;!-- release end --&gt;"
			byline="true"/>
		
		<copy todir="out/war/WEB-INF/lib" preservelastmodified="true">
			<fileset dir="lib/run">
				<include name="activation.jar"/>
				<include name="commons-cli.jar"/>
				<include name="commons-collections.jar"/>
				<include name="commons-email.jar"/>
				<include name="commons-io.jar"/>
				<include name="commons-fileupload.jar"/>
				<include name="commons-lang3.jar"/>
				<include name="commons-logging.jar"/>
				<include name="commons-net.jar"/>
				<include name="commons-vfs2.jar"/>
				<include name="dom4j.jar"/>
				<include name="flying-saucer-core.jar"/>
				<include name="flying-saucer-pdf-itext5.jar"/>
				<include name="freemarker.jar"/>
				<include name="itextpdf.jar"/>
				<include name="itext-asian.jar"/>
				<include name="javassist.jar"/>
				<include name="jtidy.jar"/>
				<include name="log4j.jar"/>
				<include name="lucene-analyzers-common.jar"/>
				<include name="lucene-core.jar"/>
				<include name="lucene-queries.jar"/>
				<include name="lucene-queryparser.jar"/>
				<include name="mail.jar"/>
				<include name="ognl.jar"/>
				<include name="poi.jar"/>
				<include name="poi-ooxml.jar"/>
				<include name="poi-ooxml-schemas.jar"/>
				<include name="sitemesh.jar"/>
				<include name="struts2-core.jar"/>
				<include name="velocity.jar"/>
				<include name="xmlbeans.jar"/>
				<include name="xwork-core.jar"/>
			</fileset>
			<fileset dir="${prj.repo}/com/foolite/panda-aems/${prj.version}">
				<include name="panda-aems-${prj.version}.jar"/>
			</fileset>
			<fileset dir="${prj.repo}/com/foolite/panda-exts/${prj.version}">
				<include name="panda-exts-${prj.version}.jar"/>
			</fileset>
			<fileset dir="${prj.repo}/com/foolite/panda-java/${prj.version}">
				<include name="panda-java-${prj.version}.jar"/>
			</fileset>
		</copy>

		<war destfile="out/${prj.name}-${VERSION}.war"
			manifest="out/war/META-INF/MANIFEST.MF">
			<fileset dir="out/war"/>
		</war>
	</target>

	<target name="dist" depends="build, javadoc, war" description="Build and distribute the project as a war file"/>

	<!-- deploy -->
	<target name="deploy" description="Deploy war to www">
		<delete includeemptydirs="true">
			<fileset dir="${app.dir}">
				<include name="pdemo/**"/>
			</fileset>
		</delete>

		<copy todir="${app.dir}/pdemo" preservelastmodified="true">
			<fileset dir="out/war">
				<include name="**/*"/>
			</fileset>
		</copy>

		<replaceregexp file="${app.dir}/pdemo/WEB-INF/classes/system.properties" 
			match="#upload.location=.*"
			replace="upload.location=${run.dir}/pdemo/upload"
			byline="true"
			encoding="ISO-8859-1"/>

		<!--
		<war destfile="${app.dir}/${prj.name}-${VERSION}.war">
			<fileset dir="${app.dir}/pdemo"/>
		</war>
		-->
	</target>

	<!-- test -->
	<import file="../panda-java/ant/prj-test.xml"/>
	
	<!-- release -->
	<target name="release" description="Release the project">
		<antcall target="ivy-report"/>
		<antcall target="gen-all"/>
		<antcall target="dist"/>
		<antcall target="war"/>
	</target>

</project>
